{"ast":null,"code":"const globalUrl = 'http://localhost:3000/todos/';\nexport async function getTodos() {\n  try {\n    const url = globalUrl;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    const data = await response.json(); // extracting the data from json object\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function insertTodo(input) {\n  try {\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: input\n      })\n    };\n    const url = globalUrl;\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function updateTodo(field, val, id) {\n  try {\n    const config = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        property: field,\n        value: val\n      })\n    };\n    const url = globalUrl + id;\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function removeTodo(id) {\n  try {\n    const config = {\n      method: 'DELETE'\n    };\n    const url = globalUrl + id;\n    const response = await fetch(url, config);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function removeDone() {\n  try {\n    const config = {\n      method: 'DELETE'\n    };\n    const url = globalUrl + '?filter=checkbox:(true OR false)';\n    const response = await fetch(url, config);\n    console.log(response);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function removeAll() {\n  try {\n    const config = {\n      method: 'DELETE'\n    };\n    const url = globalUrl;\n    // console.log(url)\n    const response = await fetch(url, config);\n    console.log(response);\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`);\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}","map":{"version":3,"names":["globalUrl","getTodos","url","response","fetch","ok","Error","status","data","json","error","console","log","insertTodo","input","config","method","headers","body","JSON","stringify","title","updateTodo","field","val","id","property","value","removeTodo","removeDone","removeAll"],"sources":["/home/chetan/Desktop/react-todo/view/src/components/FetchRequest.js"],"sourcesContent":["const globalUrl = 'http://localhost:3000/todos/'\n\nexport async function getTodos() {\n  try {\n    const url = globalUrl\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    const data = await response.json() // extracting the data from json object\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function insertTodo(input) {\n  try {\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: input\n      })\n    }\n    const url = globalUrl\n    const response = await fetch(url, config)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function updateTodo(field, val, id) {\n  try {\n    const config = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        property: field,\n        value: val\n      })\n    }\n    const url = globalUrl + id\n    const response = await fetch(url, config)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function removeTodo(id) {\n  try {\n    const config = {\n      method: 'DELETE'\n    }\n    const url = globalUrl + id\n    const response = await fetch(url, config)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function removeDone() {\n  try {\n    const config = {\n      method: 'DELETE'\n    }\n    const url = globalUrl + '?filter=checkbox:(true OR false)'\n    const response = await fetch(url, config)\n    console.log(response)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport async function removeAll() {\n  try {\n    const config = {\n      method: 'DELETE'\n    }\n    const url = globalUrl\n    // console.log(url)\n    const response = await fetch(url, config)\n    console.log(response)\n    if (!response.ok) {\n      throw new Error(`HTTP error status:${response.status}`)\n    }\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}