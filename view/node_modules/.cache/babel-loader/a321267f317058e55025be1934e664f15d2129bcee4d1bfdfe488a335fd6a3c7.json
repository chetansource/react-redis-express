{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/react-todo/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport './TodoForm.css';\nimport TodoItem from './TodoItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('items')) || []);\n  function addTodo(event) {\n    event.preventDefault();\n    console.log(inputText);\n    if (inputText.trim() === '') return;\n    todos.push({\n      id: todos.length === 0 ? 0 : Math.max(...todos.map(e => e.id)) + 1,\n      title: inputText,\n      checkbox: false,\n      dueDate: '',\n      notes: '',\n      priority: ''\n    });\n    localStorage.setItem('items', JSON.stringify(todos));\n    setInputText('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todoForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"title\",\n      type: \"text\",\n      name: \"inputText\",\n      placeholder: \"what do you want to achieve...?\",\n      value: inputText,\n      onChange: event => setInputText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submitBtn\",\n      onClick: addTodo,\n      children: \"ADD TASK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoForm, \"vZRPWLKYejyxv3KLH/LZG2GdbPI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","React","TodoItem","TodoForm","inputText","setInputText","todos","setTodos","JSON","parse","localStorage","getItem","addTodo","event","preventDefault","console","log","trim","push","id","length","Math","max","map","e","title","checkbox","dueDate","notes","priority","setItem","stringify","target","value","todo"],"sources":["/home/chetan/Desktop/react-todo/src/components/TodoForm.js"],"sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport './TodoForm.css'\nimport TodoItem from './TodoItem.js'\n\nfunction TodoForm() {\n    const [inputText, setInputText] = useState('')\n    const [todos, setTodos] = useState(\n        JSON.parse(localStorage.getItem('items')) || []\n    )\n\n    function addTodo(event) {\n        event.preventDefault()\n        console.log(inputText)\n        if (inputText.trim() === '') return\n        todos.push({\n            id:\n                todos.length === 0\n                    ? 0\n                    : Math.max(...todos.map((e) => e.id)) + 1,\n            title: inputText,\n            checkbox: false,\n            dueDate: '',\n            notes: '',\n            priority: ''\n        })\n        localStorage.setItem('items', JSON.stringify(todos))\n        setInputText('')\n    }\n\n    return (\n        <form className='todoForm'>\n            <input\n                className='title'\n                type='text'\n                name='inputText'\n                placeholder='what do you want to achieve...?'\n                value={inputText}\n                onChange={(event) => setInputText(event.target.value)}\n            />\n            <button className='submitBtn' onClick={addTodo}>\n                ADD TASK\n            </button>\n            <div>\n                {todos.map((todo) => (\n                    <TodoItem key={todo.id} todo={todo} />\n                ))}\n            </div>\n        </form>\n    )\n}\n\nexport default TodoForm\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,eAAe;AAAA;AAEpC,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAC9BQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAClD;EAED,SAASC,OAAO,CAACC,KAAK,EAAE;IACpBA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;IACtB,IAAIA,SAAS,CAACa,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7BX,KAAK,CAACY,IAAI,CAAC;MACPC,EAAE,EACEb,KAAK,CAACc,MAAM,KAAK,CAAC,GACZ,CAAC,GACDC,IAAI,CAACC,GAAG,CAAC,GAAGhB,KAAK,CAACiB,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,CAAC,CAAC,GAAG,CAAC;MACjDM,KAAK,EAAErB,SAAS;MAChBsB,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACd,CAAC,CAAC;IACFnB,YAAY,CAACoB,OAAO,CAAC,OAAO,EAAEtB,IAAI,CAACuB,SAAS,CAACzB,KAAK,CAAC,CAAC;IACpDD,YAAY,CAAC,EAAE,CAAC;EACpB;EAEA,oBACI;IAAM,SAAS,EAAC,UAAU;IAAA,wBACtB;MACI,SAAS,EAAC,OAAO;MACjB,IAAI,EAAC,MAAM;MACX,IAAI,EAAC,WAAW;MAChB,WAAW,EAAC,iCAAiC;MAC7C,KAAK,EAAED,SAAU;MACjB,QAAQ,EAAGS,KAAK,IAAKR,YAAY,CAACQ,KAAK,CAACmB,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACxD,eACF;MAAQ,SAAS,EAAC,WAAW;MAAC,OAAO,EAAErB,OAAQ;MAAA,UAAC;IAEhD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UACKN,KAAK,CAACiB,GAAG,CAAEW,IAAI,iBACZ,QAAC,QAAQ;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACf,EAAE;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GA7CQhB,QAAQ;AAAA,KAARA,QAAQ;AA+CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}