{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/react-todo/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport './TodoForm.css';\nimport TodoItem from './TodoItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('items')) || []);\n  function addTodo(event) {\n    event.preventDefault();\n    if (inputText.trim() === '') return;\n    todos.push({\n      id: todos.length === 0 ? 0 : Math.max(...todos.map(e => e.id)) + 1,\n      title: inputText,\n      checkbox: false,\n      dueDate: '',\n      notes: '',\n      priority: ''\n    });\n    localStorage.setItem('items', JSON.stringify(todos));\n    setInputText('');\n  }\n  function deleteTodo(id) {\n    const removeTodo = todos.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodos(removeTodo);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todoForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title\",\n        type: \"text\",\n        name: \"inputText\",\n        placeholder: \"what do you want to achieve...?\",\n        value: inputText,\n        onChange: event => setInputText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submitBtn\",\n        onClick: addTodo,\n        children: \"ADD TASK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        onDelete: deleteTodo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"vZRPWLKYejyxv3KLH/LZG2GdbPI=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","React","TodoItem","TodoForm","inputText","setInputText","todos","setTodos","JSON","parse","localStorage","getItem","addTodo","event","preventDefault","trim","push","id","length","Math","max","map","e","title","checkbox","dueDate","notes","priority","setItem","stringify","deleteTodo","removeTodo","filter","todo","target","value"],"sources":["/home/chetan/Desktop/react-todo/src/components/TodoForm.js"],"sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport './TodoForm.css'\nimport TodoItem from './TodoItem.js'\n\nfunction TodoForm() {\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem('items')) || []\n  )\n\n  function addTodo(event) {\n    event.preventDefault()\n    if (inputText.trim() === '') return\n    todos.push({\n      id: todos.length === 0 ? 0 : Math.max(...todos.map((e) => e.id)) + 1,\n      title: inputText,\n      checkbox: false,\n      dueDate: '',\n      notes: '',\n      priority: ''\n    })\n    localStorage.setItem('items', JSON.stringify(todos))\n    setInputText('')\n  }\n  function deleteTodo(id) {\n    const removeTodo = todos.filter((todo) => {\n      return todo.id !== id\n    })\n    setTodos(removeTodo)\n  }\n\n  return (\n    <form className='todoForm'>\n      <div className='form'>\n        <input\n          className='title'\n          type='text'\n          name='inputText'\n          placeholder='what do you want to achieve...?'\n          value={inputText}\n          onChange={(event) => setInputText(event.target.value)}\n        />\n        <button className='submitBtn' onClick={addTodo}>\n          ADD TASK\n        </button>\n      </div>\n      <div>\n        {todos.map((todo) => (\n          <TodoItem key={todo.id} todo={todo} onDelete={deleteTodo} />\n        ))}\n      </div>\n    </form>\n  )\n}\n\nexport default TodoForm\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,eAAe;AAAA;AAEpC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAChCQ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAChD;EAED,SAASC,OAAO,CAACC,KAAK,EAAE;IACtBA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIV,SAAS,CAACW,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7BT,KAAK,CAACU,IAAI,CAAC;MACTC,EAAE,EAAEX,KAAK,CAACY,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGd,KAAK,CAACe,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACL,EAAE,CAAC,CAAC,GAAG,CAAC;MACpEM,KAAK,EAAEnB,SAAS;MAChBoB,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFjB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEpB,IAAI,CAACqB,SAAS,CAACvB,KAAK,CAAC,CAAC;IACpDD,YAAY,CAAC,EAAE,CAAC;EAClB;EACA,SAASyB,UAAU,CAACb,EAAE,EAAE;IACtB,MAAMc,UAAU,GAAGzB,KAAK,CAAC0B,MAAM,CAAEC,IAAI,IAAK;MACxC,OAAOA,IAAI,CAAChB,EAAE,KAAKA,EAAE;IACvB,CAAC,CAAC;IACFV,QAAQ,CAACwB,UAAU,CAAC;EACtB;EAEA,oBACE;IAAM,SAAS,EAAC,UAAU;IAAA,wBACxB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QACE,SAAS,EAAC,OAAO;QACjB,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,WAAW;QAChB,WAAW,EAAC,iCAAiC;QAC7C,KAAK,EAAE3B,SAAU;QACjB,QAAQ,EAAGS,KAAK,IAAKR,YAAY,CAACQ,KAAK,CAACqB,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACtD,eACF;QAAQ,SAAS,EAAC,WAAW;QAAC,OAAO,EAAEvB,OAAQ;QAAA,UAAC;MAEhD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAA,UACGN,KAAK,CAACe,GAAG,CAAEY,IAAI,iBACd,QAAC,QAAQ;QAAe,IAAI,EAAEA,IAAK;QAAC,QAAQ,EAAEH;MAAW,GAA1CG,IAAI,CAAChB,EAAE;QAAA;QAAA;QAAA;MAAA,QACvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX;AAAC,GAjDQd,QAAQ;AAAA,KAARA,QAAQ;AAmDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}