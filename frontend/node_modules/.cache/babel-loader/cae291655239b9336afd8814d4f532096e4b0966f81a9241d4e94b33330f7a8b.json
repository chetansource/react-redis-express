{"ast":null,"code":"var _jsxFileName = \"/home/chetan/Desktop/react-todo/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport React from 'react';\nimport './TodoForm.css';\nimport TodoItem from './TodoItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet id = 0;\nfunction TodoForm() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  function addTodo(event) {\n    event.preventDefault();\n    console.log(inputText);\n    if (inputText.trim() === '') return;\n    todos.push({\n      id: id++,\n      title: inputText,\n      checkbox: false,\n      dueDate: '',\n      notes: '',\n      priority: ''\n    });\n    localStorage.setItem('items', JSON.stringify(todos));\n    // console.log('after adding', todos)\n    setInputText('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"title\",\n      type: \"text\",\n      name: \"inputText\",\n      placeholder: \"what do you want to achieve...?\",\n      value: inputText,\n      onChange: event => setInputText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submitBtn\",\n      onClick: addTodo,\n      children: \"ADD TASK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoForm, \"W8yvr7LPbv6kzK3ynFYPqtSpux8=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","React","TodoItem","id","TodoForm","inputText","setInputText","todos","setTodos","addTodo","event","preventDefault","console","log","trim","push","title","checkbox","dueDate","notes","priority","localStorage","setItem","JSON","stringify","target","value","map","todo"],"sources":["/home/chetan/Desktop/react-todo/src/components/TodoForm.js"],"sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport './TodoForm.css'\nimport TodoItem from './TodoItem.js'\n\nlet id = 0\n\nfunction TodoForm() {\n    const [inputText, setInputText] = useState('')\n    const [todos, setTodos] = useState([])\n\n    function addTodo(event) {\n        event.preventDefault()\n        console.log(inputText)\n        if (inputText.trim() === '') return\n        todos.push({\n            id: id++,\n            title: inputText,\n            checkbox: false,\n            dueDate: '',\n            notes: '',\n            priority: ''\n        })\n        localStorage.setItem('items', JSON.stringify(todos))\n        // console.log('after adding', todos)\n        setInputText('')\n    }\n\n    return (\n        <form>\n            <input\n                className='title'\n                type='text'\n                name='inputText'\n                placeholder='what do you want to achieve...?'\n                value={inputText}\n                onChange={(event) => setInputText(event.target.value)}\n            />\n            <button className='submitBtn' onClick={addTodo}>\n                ADD TASK\n            </button>\n            <div>\n                {todos.map((todo) => (\n                    <TodoItem key={todo.id} todo={todo} />\n                ))}\n            </div>\n        </form>\n    )\n}\n\nexport default TodoForm\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,eAAe;AAAA;AAEpC,IAAIC,EAAE,GAAG,CAAC;AAEV,SAASC,QAAQ,GAAG;EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,SAASS,OAAO,CAACC,KAAK,EAAE;IACpBA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACR,SAAS,CAAC;IACtB,IAAIA,SAAS,CAACS,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7BP,KAAK,CAACQ,IAAI,CAAC;MACPZ,EAAE,EAAEA,EAAE,EAAE;MACRa,KAAK,EAAEX,SAAS;MAChBY,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACd,CAAC,CAAC;IACFC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACjB,KAAK,CAAC,CAAC;IACpD;IACAD,YAAY,CAAC,EAAE,CAAC;EACpB;EAEA,oBACI;IAAA,wBACI;MACI,SAAS,EAAC,OAAO;MACjB,IAAI,EAAC,MAAM;MACX,IAAI,EAAC,WAAW;MAChB,WAAW,EAAC,iCAAiC;MAC7C,KAAK,EAAED,SAAU;MACjB,QAAQ,EAAGK,KAAK,IAAKJ,YAAY,CAACI,KAAK,CAACe,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QACxD,eACF;MAAQ,SAAS,EAAC,WAAW;MAAC,OAAO,EAAEjB,OAAQ;MAAA,UAAC;IAEhD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAA,UACKF,KAAK,CAACoB,GAAG,CAAEC,IAAI,iBACZ,QAAC,QAAQ;QAAe,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACzB,EAAE;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEf;AAAC,GAzCQC,QAAQ;AAAA,KAARA,QAAQ;AA2CjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}